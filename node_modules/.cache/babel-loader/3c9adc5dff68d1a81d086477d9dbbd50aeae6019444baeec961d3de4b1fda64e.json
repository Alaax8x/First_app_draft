{"ast":null,"code":"import * as d3 from \"d3\";\nimport { useEffect, useRef } from \"react\";\n\n// const Barchart = () => {\n//   const ref = useRef();\n\n//   useEffect(() => {\n//     // set the dimensions and margins of the graph\n//     const margin = { top: 30, right: 30, bottom: 70, left: 60 },\n//       width = 460 - margin.left - margin.right,\n//       height = 400 - margin.top - margin.bottom;\n\n//     // append the svg object to the body of the page\n//     const svg = d3\n//       .select(ref.current)\n//       .append(\"svg\")\n//       .attr(\"width\", width + margin.left + margin.right)\n//       .attr(\"height\", height + margin.top + margin.bottom)\n//       .append(\"g\")\n//       .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n//     // Parse the Data\n//     d3.csv(\n//       \"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/7_OneCatOneNum_header.csv\"\n//     ).then(function (data) {\n//       // X axis\n//       const x = d3\n//         .scaleBand()\n//         .range([0, width])\n//         .domain(data.map((d) => d.Country))\n//         .padding(0.2);\n//       svg\n//         .append(\"g\")\n//         .attr(\"transform\", `translate(0, ${height})`)\n//         .call(d3.axisBottom(x))\n//         .selectAll(\"text\")\n//         .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\n//         .style(\"text-anchor\", \"end\");\n\n//       // Add Y axis\n//       const y = d3.scaleLinear().domain([0, 13000]).range([height, 0]);\n//       svg.append(\"g\").call(d3.axisLeft(y));\n\n//       // Bars\n//       svg\n//         .selectAll(\"mybar\")\n//         .data(data)\n//         .join(\"rect\")\n//         .attr(\"x\", (d) => x(d.Country))\n//         .attr(\"y\", (d) => y(d.Value))\n//         .attr(\"width\", x.bandwidth())\n//         .attr(\"height\", (d) => height - y(d.Value))\n//         .attr(\"fill\", \"#5f0f40\");\n//     });\n//   }, []);\n\n//   return <svg width={460} height={400} id=\"barchart\" ref={ref} />;\n// };\n\nconst Barchart = () => {\n  // set the dimensions and margins of the graph\n  var margin = {\n      top: 30,\n      right: 30,\n      bottom: 70,\n      left: 60\n    },\n    width = 460 - margin.left - margin.right,\n    height = 400 - margin.top - margin.bottom;\n\n  // append the svg object to the body of the page\n  var svg = d3.select(\"#my_dataviz\").append(\"svg\").attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  // Parse the Data\n  d3.csv(\"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/7_OneCatOneNum_header.csv\", function (data) {\n    // X axis\n    var x = d3.scaleBand().range([0, width]).domain(data.map(function (d) {\n      return d.Country;\n    })).padding(0.2);\n    svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x)).selectAll(\"text\").attr(\"transform\", \"translate(-10,0)rotate(-45)\").style(\"text-anchor\", \"end\");\n\n    // Add Y axis\n    var y = d3.scaleLinear().domain([0, 13000]).range([height, 0]);\n    svg.append(\"g\").call(d3.axisLeft(y));\n\n    // Bars\n    svg.selectAll(\"mybar\").data(data).enter().append(\"rect\").attr(\"x\", function (d) {\n      return x(d.Country);\n    }).attr(\"y\", function (d) {\n      return y(d.Value);\n    }).attr(\"width\", x.bandwidth()).attr(\"height\", function (d) {\n      return height - y(d.Value);\n    }).attr(\"fill\", \"#69b3a2\");\n  });\n};\n_c = Barchart;\nexport default Barchart;\nvar _c;\n$RefreshReg$(_c, \"Barchart\");","map":{"version":3,"names":["d3","useEffect","useRef","Barchart","margin","top","right","bottom","left","width","height","svg","select","append","attr","csv","data","x","scaleBand","range","domain","map","d","Country","padding","call","axisBottom","selectAll","style","y","scaleLinear","axisLeft","enter","Value","bandwidth","_c","$RefreshReg$"],"sources":["C:/Users/alaax/ReactProjects/react-d3-test/src/Barchart.jsx"],"sourcesContent":["import * as d3 from \"d3\";\r\nimport { useEffect, useRef } from \"react\";\r\n\r\n// const Barchart = () => {\r\n//   const ref = useRef();\r\n\r\n//   useEffect(() => {\r\n//     // set the dimensions and margins of the graph\r\n//     const margin = { top: 30, right: 30, bottom: 70, left: 60 },\r\n//       width = 460 - margin.left - margin.right,\r\n//       height = 400 - margin.top - margin.bottom;\r\n\r\n//     // append the svg object to the body of the page\r\n//     const svg = d3\r\n//       .select(ref.current)\r\n//       .append(\"svg\")\r\n//       .attr(\"width\", width + margin.left + margin.right)\r\n//       .attr(\"height\", height + margin.top + margin.bottom)\r\n//       .append(\"g\")\r\n//       .attr(\"transform\", `translate(${margin.left},${margin.top})`);\r\n\r\n//     // Parse the Data\r\n//     d3.csv(\r\n//       \"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/7_OneCatOneNum_header.csv\"\r\n//     ).then(function (data) {\r\n//       // X axis\r\n//       const x = d3\r\n//         .scaleBand()\r\n//         .range([0, width])\r\n//         .domain(data.map((d) => d.Country))\r\n//         .padding(0.2);\r\n//       svg\r\n//         .append(\"g\")\r\n//         .attr(\"transform\", `translate(0, ${height})`)\r\n//         .call(d3.axisBottom(x))\r\n//         .selectAll(\"text\")\r\n//         .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n//         .style(\"text-anchor\", \"end\");\r\n\r\n//       // Add Y axis\r\n//       const y = d3.scaleLinear().domain([0, 13000]).range([height, 0]);\r\n//       svg.append(\"g\").call(d3.axisLeft(y));\r\n\r\n//       // Bars\r\n//       svg\r\n//         .selectAll(\"mybar\")\r\n//         .data(data)\r\n//         .join(\"rect\")\r\n//         .attr(\"x\", (d) => x(d.Country))\r\n//         .attr(\"y\", (d) => y(d.Value))\r\n//         .attr(\"width\", x.bandwidth())\r\n//         .attr(\"height\", (d) => height - y(d.Value))\r\n//         .attr(\"fill\", \"#5f0f40\");\r\n//     });\r\n//   }, []);\r\n\r\n//   return <svg width={460} height={400} id=\"barchart\" ref={ref} />;\r\n// };\r\n\r\nconst Barchart = () => {\r\n    // set the dimensions and margins of the graph\r\n    var margin = { top: 30, right: 30, bottom: 70, left: 60 },\r\n      width = 460 - margin.left - margin.right,\r\n      height = 400 - margin.top - margin.bottom;\r\n  \r\n    // append the svg object to the body of the page\r\n    var svg = d3\r\n      .select(\"#my_dataviz\")\r\n      .append(\"svg\")\r\n      .attr(\"width\", width + margin.left + margin.right)\r\n      .attr(\"height\", height + margin.top + margin.bottom)\r\n      .append(\"g\")\r\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n  \r\n    // Parse the Data\r\n    d3.csv(\r\n      \"https://raw.githubusercontent.com/holtzy/data_to_viz/master/Example_dataset/7_OneCatOneNum_header.csv\",\r\n      function (data) {\r\n        // X axis\r\n        var x = d3\r\n          .scaleBand()\r\n          .range([0, width])\r\n          .domain(\r\n            data.map(function (d) {\r\n              return d.Country;\r\n            })\r\n          )\r\n          .padding(0.2);\r\n        svg\r\n          .append(\"g\")\r\n          .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n          .call(d3.axisBottom(x))\r\n          .selectAll(\"text\")\r\n          .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\r\n          .style(\"text-anchor\", \"end\");\r\n  \r\n        // Add Y axis\r\n        var y = d3.scaleLinear().domain([0, 13000]).range([height, 0]);\r\n        svg.append(\"g\").call(d3.axisLeft(y));\r\n  \r\n        // Bars\r\n        svg\r\n          .selectAll(\"mybar\")\r\n          .data(data)\r\n          .enter()\r\n          .append(\"rect\")\r\n          .attr(\"x\", function (d) {\r\n            return x(d.Country);\r\n          })\r\n          .attr(\"y\", function (d) {\r\n            return y(d.Value);\r\n          })\r\n          .attr(\"width\", x.bandwidth())\r\n          .attr(\"height\", function (d) {\r\n            return height - y(d.Value);\r\n          })\r\n          .attr(\"fill\", \"#69b3a2\");\r\n      }\r\n    );\r\n  };\r\n  \r\n\r\nexport default Barchart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}