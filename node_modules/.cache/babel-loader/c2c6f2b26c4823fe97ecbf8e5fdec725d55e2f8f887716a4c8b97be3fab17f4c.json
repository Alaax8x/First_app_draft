{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alaax\\\\ReactProjects\\\\react-d3-test\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [report, setReport] = useState(null);\n  const [confMatrixUrl, setConfMatrixUrl] = useState(\"\");\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:5000/test/ml\").then(res => res.json()).then(data => {\n      setReport(data.report);\n      setConfMatrixUrl(data.conf_matrix_url);\n    }).catch(err => console.error(\"Error fetching data:\", err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Classification Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), report ? /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Metric\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Precision\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Recall\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"F1-Score\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Support\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: Object.keys(report).map((label, index) => {\n            if (typeof report[label] === \"object\") {\n              var _report$label$precisi, _report$label$recall, _report$label$f1Scor;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: (_report$label$precisi = report[label].precision) === null || _report$label$precisi === void 0 ? void 0 : _report$label$precisi.toFixed(2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: (_report$label$recall = report[label].recall) === null || _report$label$recall === void 0 ? void 0 : _report$label$recall.toFixed(2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: (_report$label$f1Scor = report[label][\"f1-score\"]) === null || _report$label$f1Scor === void 0 ? void 0 : _report$label$f1Scor.toFixed(2)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: report[label].support\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 42,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 21\n              }, this);\n            }\n            return null;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Confusion Matrix\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), confMatrixUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: confMatrixUrl,\n        alt: \"Confusion Matrix\",\n        width: \"400\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 26\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 91\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"rD3jiir3PmhV8qzKscrdVlOxE8g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","report","setReport","confMatrixUrl","setConfMatrixUrl","fetch","then","res","json","data","conf_matrix_url","catch","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","border","Object","keys","map","label","index","_report$label$precisi","_report$label$recall","_report$label$f1Scor","precision","toFixed","recall","support","src","alt","width","_c","$RefreshReg$"],"sources":["C:/Users/alaax/ReactProjects/react-d3-test/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [report, setReport] = useState(null);\n  const [confMatrixUrl, setConfMatrixUrl] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:5000/test/ml\")\n      .then(res => res.json())\n      .then(data => {\n        setReport(data.report);\n        setConfMatrixUrl(data.conf_matrix_url);\n      })\n      .catch(err => console.error(\"Error fetching data:\", err));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Classification Report</h1>\n        {report ? (\n          <table border=\"1\">\n            <thead>\n              <tr>\n                <th>Metric</th>\n                <th>Precision</th>\n                <th>Recall</th>\n                <th>F1-Score</th>\n                <th>Support</th>\n              </tr>\n            </thead>\n            <tbody>\n              {Object.keys(report).map((label, index) => {\n                if (typeof report[label] === \"object\") {\n                  return (\n                    <tr key={index}>\n                      <td>{label}</td>\n                      <td>{report[label].precision?.toFixed(2)}</td>\n                      <td>{report[label].recall?.toFixed(2)}</td>\n                      <td>{report[label][\"f1-score\"]?.toFixed(2)}</td>\n                      <td>{report[label].support}</td>\n                    </tr>\n                  );\n                }\n                return null;\n              })}\n            </tbody>\n          </table>\n        ) : (\n          <p>Loading...</p>\n        )}\n\n        <h2>Confusion Matrix</h2>\n        {confMatrixUrl ? <img src={confMatrixUrl} alt=\"Confusion Matrix\" width=\"400\" /> : <p>Loading...</p>}\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}